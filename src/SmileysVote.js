import React, { useState } from 'react';

const SmileysVote = () => {
    const [smileys, setSmileys] = useState([
        { id: 1, count: 0 },
        { id: 2, count: 0 },
        { id: 3, count: 0 },
    ]);

    const handleVote = (id) => {
        setSmileys(prevState => {
        return prevState.map(smiley => (
            smiley.id === id ? { ...smiley, count: smiley.count + 1 } : smiley
        ));
        });
    };

    const showResults = () => {
        const winningSmiley = smileys.reduce((prev, current) => (
        (prev.count > current.count) ? prev : current
        ));
        return `–°–º–∞–π–ª ${winningSmiley.id} –ø–µ—Ä–µ–º—ñ–≥ –∑ ${winningSmiley.count} –≥–æ–ª–æ—Å–∞–º–∏!`;
    };

    return (
        <div>
            <h2>–ì–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è –∑–∞ –Ω–∞–π–∫—Ä–∞—â–∏–π —Å–º–∞–π–ª–∏–∫</h2>
            <p>*–¥–ª—è –≥–æ–ª–æ—Å—É–≤–∞–Ω–Ω—è –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ —Å–º–∞–π–ª–∏–∫</p>
            <div class="list-smiley">
                <ul>
                    {smileys.map(smiley => (
                    <li key={smiley.id}>
                        <span>–°–º–∞–π–ª {smiley.id}</span>
                        <button class="smiley" onClick={() => handleVote(smiley.id)}>
                            {smiley.id === 1 && "üòä"}
                            {smiley.id === 2 && "üòÑ"}
                            {smiley.id === 3 && "ü•∞"}
                        </button>
                        <span>–ì–æ–ª–æ—Å—ñ–≤: {smiley.count}</span>
                    </li>
                    ))}
                </ul>
            </div>
            <button class="resbttn" onClick={() => alert(showResults())}>–†–µ–∑—É–ª—å—Ç–∞—Ç</button>
        </div>
    );
    };

export default SmileysVote;
